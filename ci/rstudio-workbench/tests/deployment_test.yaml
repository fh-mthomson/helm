suite: Workbench Deployment
templates:
  - configmap-general.yaml
  - configmap-prestart.yaml
  - configmap-secret.yaml
  - configmap-session.yaml
  - deployment.yaml
tests:
  - it: should not specify the RollingUpdate configuration if the strategy type is not RollingUpdate
    template: deployment.yaml
    set:
      strategy:
        type: "Recreate"
    asserts:
      - notExists:
          path: "spec.strategy.rollingUpdate"
  - it: should specify the RollingUpdate configuration if the strategy type is RollingUpdate
    template: deployment.yaml
    set:
      strategy:
        type: "RollingUpdate"
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: "50%"
    asserts:
      - equal:
          path: "spec.strategy.type"
          value: "RollingUpdate"
      - equal:
          path: "spec.strategy.rollingUpdate.maxUnavailable"
          value: 1
      - equal:
          path: "spec.strategy.rollingUpdate.maxSurge"
          value: "50%"
  - it: should specify the diagnostic env vars if diagnostics is enabled
    template: deployment.yaml
    set:
      diagnostics:
        enabled: true
        directory: "/var/log/rstudio-workbench"
    asserts:
      - equal:
          path: 'spec.template.spec.containers[0].env[?(@.name=="DIAGNOSTIC_DIR")].value'
          value: "/var/log/rstudio-workbench"
      - equal:
          path: 'spec.template.spec.containers[0].env[?(@.name=="DIAGNOSTIC_ENABLE")].value'
          value: "true"
      - equal:
          path: 'spec.template.spec.containers[0].env[?(@.name=="DIAGNOSTIC_ONLY")].value'
          value: "true"
  - it: should not specify the diagnostic env vars if diagnostics is not enabled
    template: deployment.yaml
    set:
      diagnostics:
        enabled: false
        directory: "/var/log/rstudio-workbench"
    asserts:
      - notExists:
          path: 'spec.template.spec.containers[0].env[?(@.name=="DIAGNOSTIC_DIR")]'
      - notExists:
          path: 'spec.template.spec.containers[0].env[?(@.name=="DIAGNOSTIC_ENABLE")]'
      - notExists:
          path: 'spec.template.spec.containers[0].env[?(@.name=="DIAGNOSTIC_ONLY")]'
